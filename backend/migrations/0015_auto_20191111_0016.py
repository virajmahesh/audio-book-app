# Generated by Django 2.2.6 on 2019-11-11 00:16

from django.db import migrations
from django.utils.html import strip_tags
from backend.models import *


def create_audiobooks(apps, schema_editor):
    #LibriVoxBook = apps.get_model('backend', 'LibriVoxBook')
    #GutenbergBook = apps.get_model('backend', 'GutenbergBook')
    #GoodreadsBook = apps.get_model('backend', 'GoodreadsBook')
    #Audiobook = apps.get_model('backend', 'Audiobook')

    for i, librivox_book in enumerate(LibriVoxBook.objects.all()):
        print(i)

        gutenberg_book = GutenbergBook.objects.filter(gutenberg_id=librivox_book.gutenberg_id).first()

        if gutenberg_book is not None:
            goodreads_book = GoodreadsBook.objects.filter(gutenberg_book_id=gutenberg_book.id).first()
        else:
            goodreads_book = None

        # Set title and description
        audiobook = Audiobook()
        audiobook.title = librivox_book.title
        audiobook.description = strip_tags(librivox_book.description)

        audiobook.gutenberg_book = gutenberg_book
        audiobook.librivox_book = librivox_book

        # Set Audio and Text URLs
        if gutenberg_book is not None:
            audiobook.text_url = gutenberg_book.text_url()
        else:
            audiobook.text_url = librivox_book.text_url()

        audiobook.audio_url = librivox_book.audio_url()

        combined_authors = librivox_book.author_set.all()
        if gutenberg_book is not None:
            combined_authors = combined_authors.union(gutenberg_book.author_set.all())

        # Set Goodreads ratings count if there's a match between rating and author
        if goodreads_book is not None:
            # Check if authors match and set ratings count from Goodreads
            for author in combined_authors:
                if goodreads_book.is_authored_by(author):
                    print('Author match for goodreads')
                    audiobook.goodreads_ratings_count = goodreads_book.ratings_count
                    break

            # Set image URLs
            audiobook.primary_image_url = goodreads_book.get_image_URL()
            audiobook.primary_image_url = goodreads_book.get_ISBN_URL()

        # Save audiobook and authors
        audiobook.save()
        audiobook.author_set.add(*list(combined_authors))

        audiobook.save()


class Migration(migrations.Migration):
    dependencies = [
        ('backend', '0016_auto_20191111_0313'),
    ]

    operations = [
        migrations.RunPython(create_audiobooks)
    ]
