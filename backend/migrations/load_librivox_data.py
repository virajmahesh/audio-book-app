# Generated by Django 2.2.6 on 2019-11-10 02:01
import re
import csv
import backend.scripts.utils as utils
from django.db import migrations

GUTTENBERG_URL_PATTERN = 'gutenberg.org/(etext|ebooks)/(\d+)'
LIBRIVOX_CSV_PATH = 'staticfiles/data/librivox_data/librivox_gutenberg_books.csv'

def get_gutenberg_id(url):
    if url is None or url == '':
        return None
    regex_match = re.search(GUTTENBERG_URL_PATTERN, url)

    if regex_match is None:
        print(url)
        return None
    return regex_match.group(2);


def load_librivox_data(apps, schema_editor):
    LibriVoxBook = apps.get_model('backend', 'LibriVoxBook')

    # Open the LibriVox CSV file with book data
    f = open(LIBRIVOX_CSV_PATH, 'r')
    csv_file = csv.DictReader(f, fieldnames=utils.librivox_field_names())
    next(csv_file)  # Skip the CSV header

    for i, row in enumerate(csv_file):
        LibriVoxBook.objects.create(
            librivox_id=row['id'],
            title=row['title'],
            description=row['description'],
            language=row['language'],
            copyright_year=row['copyright_year'],
            num_sections=row['num_sections'],
            url_text_source=row['url_text_source'],
            url_rss=row['url_rss'],
            url_zip_file=row['url_zip_file'],
            totaltime=row['totaltime'],
            totaltimesecs=row['totaltimesecs'],
            gutenberg_id=get_gutenberg_id(row['url_text_source'])
        )


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0031_auto_20191110_0210'),
    ]

    operations = [
        migrations.RunPython(load_librivox_data)
    ]
